---
// Hero Section Component
---

<section id="inicio" class="hero-bg min-h-screen flex items-center justify-center relative overflow-hidden">
  <div id="particles-js" class="absolute inset-0 z-0"></div>
  
  <div class="container mx-auto px-6 lg:px-8 relative z-10">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <!-- Content Column -->
      <div class="text-center lg:text-left">
        <div class="mb-6">
          <span class="inline-block px-4 py-2 bg-blue-100 text-blue-800 rounded-full text-sm font-medium mb-4">
            👋 ¡Hola! Soy Carlos León
          </span>
        </div>
        
        <h1 class="text-4xl lg:text-6xl font-bold mb-6 leading-tight">
          <span class="text-gradient">Desarrollador</span><br>
          <span class="text-gray-800">Full Stack</span>
        </h1>
        
        <div class="text-xl lg:text-2xl text-gray-600 mb-2 h-8">
          <span id="typing-text" class="font-medium text-gradient"></span>
          <span class="animate-pulse text-gray-400">|</span>
        </div>
        
        <p class="text-lg text-gray-600 mb-8 max-w-2xl leading-relaxed">
          Especializado en crear experiencias digitales excepcionales. 
          Combino desarrollo web, móvil y UI/UX para transformar ideas en soluciones innovadoras.
        </p>
        
        <!-- Tech Stack Icons -->
        <div class="flex flex-wrap gap-4 mb-8 justify-center lg:justify-start">
          <div class="skill-icon text-blue-600" title="React">
            <i class="fab fa-react"></i>
          </div>
          <div class="skill-icon text-green-600" title="Vue.js">
            <i class="fab fa-vuejs"></i>
          </div>
          <div class="skill-icon text-yellow-500" title="JavaScript">
            <i class="fab fa-js-square"></i>
          </div>
          <div class="skill-icon text-green-500" title="Node.js">
            <i class="fab fa-node-js"></i>
          </div>
          <div class="skill-icon text-blue-500" title="Flutter">
            <i class="fas fa-mobile-alt"></i>
          </div>
          <div class="skill-icon text-purple-600" title="Figma">
            <i class="fab fa-figma"></i>
          </div>
        </div>
        
        <!-- CTA Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
          <a href="#proyectos" class="btn-primary">
            <i class="fas fa-rocket"></i>
            Ver Proyectos
          </a>
          <a href="#contacto" class="btn-secondary">
            <i class="fas fa-envelope"></i>
            Contactar
          </a>
        </div>
        
        <!-- Stats -->
        <div class="grid grid-cols-3 gap-6 mt-12 pt-8 border-t border-gray-200">
          <div class="text-center">
            <div class="text-2xl font-bold text-blue-600">3+</div>
            <div class="text-sm text-gray-600">Años Experiencia</div>
          </div>
          <div class="text-center">
            <div class="text-2xl font-bold text-purple-600">50+</div>
            <div class="text-sm text-gray-600">Proyectos</div>
          </div>
          <div class="text-center">
            <div class="text-2xl font-bold text-cyan-600">100%</div>
            <div class="text-sm text-gray-600">Satisfacción</div>
          </div>
        </div>
      </div>
      
      <!-- Image Column -->
      <div class="flex justify-center lg:justify-end">
        <div class="relative">
          <!-- Main Profile Image -->
          <div class="relative w-80 h-80 lg:w-96 lg:h-96 group">
            <div class="absolute inset-0 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full transition-transform duration-500 group-hover:scale-105"></div>
            <div class="absolute inset-2 bg-gradient-to-br from-cyan-400 to-blue-500 rounded-full transition-transform duration-500 group-hover:scale-105" style="animation-delay: 1s;"></div>
            <img 
              src="/perfil.jpg" 
              alt="Carlos León - Desarrollador Full Stack" 
              class="relative z-10 w-full h-full object-cover rounded-full border-4 border-white shadow-2xl transition-transform duration-500 group-hover:scale-110"
            >
          </div>
          
          <!-- Floating Badges -->
          <div class="absolute -top-4 -right-4 bg-white rounded-full p-3 shadow-lg animate-float">
            <i class="fas fa-code text-2xl text-blue-600"></i>
          </div>
          <div class="absolute -bottom-4 -left-4 bg-white rounded-full p-3 shadow-lg animate-float" style="animation-delay: 2s;">
            <i class="fas fa-mobile-alt text-2xl text-purple-600"></i>
          </div>
          <div class="absolute top-1/2 -left-8 bg-white rounded-full p-2 shadow-lg animate-float" style="animation-delay: 4s;">
            <i class="fas fa-palette text-xl text-cyan-600"></i>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Scroll Indicator -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
      <a href="#sobre-mi" class="text-gray-400 hover:text-blue-600 transition-colors">
        <i class="fas fa-chevron-down text-2xl"></i>
      </a>
    </div>
  </div>
</section>

<script is:inline src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
<script>
  // Extend the Window interface
  interface CustomWindow extends Window {
    particlesJS?: any;
  }

  declare const window: CustomWindow;

  document.addEventListener('DOMContentLoaded', () => {
    // Particles.js configuration
    if (window.particlesJS) {
      window.particlesJS('particles-js', {
        "particles": {
          "number": {
            "value": 80,
            "density": {
              "enable": true,
              "value_area": 800
            }
          },
          "color": {
            "value": "#2563eb"
          },
          "shape": {
            "type": "circle",
          },
          "opacity": {
            "value": 0.5,
            "random": false,
          },
          "size": {
            "value": 3,
            "random": true,
          },
          "line_linked": {
            "enable": true,
            "distance": 150,
            "color": "#9ca3af",
            "opacity": 0.4,
            "width": 1
          },
          "move": {
            "enable": true,
            "speed": 2,
            "direction": "none",
            "random": false,
            "straight": false,
            "out_mode": "out",
            "bounce": false,
          }
        },
        "interactivity": {
          "detect_on": "canvas",
          "events": {
            "onhover": {
              "enable": true,
              "mode": "grab"
            },
            "onclick": {
              "enable": true,
              "mode": "push"
            },
            "resize": true
          },
          "modes": {
            "grab": {
              "distance": 140,
              "line_linked": {
                "opacity": 1
              }
            },
            "push": {
              "particles_nb": 4
            },
          }
        },
        "retina_detect": true
      });
    }

    const typingElement = document.getElementById('typing-text');
    if (!typingElement) return;
    
    const texts = [
      'Desarrollador Full Stack',
      'Especialista en React & Vue',
      'Creador de Apps Móviles',
      'Experto en UI/UX',
      'Automatización & APIs'
    ];
    let textIndex = 0;
    let charIndex = 0;
    let isDeleting = false;
    
    function typeText() {
      if (!typingElement) return;
      
      const currentText = texts[textIndex];
      
      if (isDeleting) {
        typingElement.textContent = currentText.substring(0, charIndex - 1);
        charIndex--;
      } else {
        typingElement.textContent = currentText.substring(0, charIndex + 1);
        charIndex++;
      }
      
      let typeSpeed = isDeleting ? 50 : 100;
      
      if (!isDeleting && charIndex === currentText.length) {
        typeSpeed = 2000;
        isDeleting = true;
      } else if (isDeleting && charIndex === 0) {
        isDeleting = false;
        textIndex = (textIndex + 1) % texts.length;
      }
      
      setTimeout(typeText, typeSpeed);
    }
    
    typeText();
  });
</script>