---
// Matrix Rain Effect Component
---

<canvas id="matrix-canvas" class="matrix-rain"></canvas>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		const canvas = document.getElementById('matrix-canvas') as HTMLCanvasElement;
		if (!canvas) return;
		
		const ctx = canvas.getContext('2d');
		if (!ctx) return;
		
		// Set canvas size
		function resizeCanvas() {
			canvas.width = window.innerWidth;
			canvas.height = window.innerHeight;
		}
		
		resizeCanvas();
		window.addEventListener('resize', resizeCanvas);
		
		// Matrix characters
		const matrixChars = '01アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲン';
		const fontSize = 14;
		const columns = Math.floor(canvas.width / fontSize);
		
		// Array to store drop positions
		const drops: number[] = [];
		
		// Initialize drops
		for (let i = 0; i < columns; i++) {
			drops[i] = Math.random() * -100;
		}
		
		function drawMatrix() {
			if (!ctx || !canvas) return;
			
			// Create fade effect
			ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
			ctx.fillRect(0, 0, canvas.width, canvas.height);
			
			// Set text properties
			ctx.fillStyle = '#00ff00';
			ctx.font = `${fontSize}px monospace`;
			
			// Draw characters
			for (let i = 0; i < drops.length; i++) {
				const char = matrixChars[Math.floor(Math.random() * matrixChars.length)];
				const x = i * fontSize;
				const y = drops[i] * fontSize;
				
				// Add glow effect for some characters
				if (Math.random() > 0.98) {
					ctx.shadowColor = '#00ff00';
					ctx.shadowBlur = 10;
				} else {
					ctx.shadowBlur = 0;
				}
				
				ctx.fillText(char, x, y);
				
				// Reset drop if it goes off screen
				if (y > canvas.height && Math.random() > 0.975) {
					drops[i] = 0;
				}
				
				drops[i]++;
			}
		}
		
		// Start animation
		setInterval(drawMatrix, 50);
		
		// Pause animation when page is not visible
		let animationId: number;
		
		function animate() {
			drawMatrix();
			animationId = requestAnimationFrame(animate);
		}
		
		document.addEventListener('visibilitychange', function() {
			if (document.hidden) {
				cancelAnimationFrame(animationId);
			} else {
				animate();
			}
		});
	});
</script>

<style>
	#matrix-canvas {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		pointer-events: none;
		z-index: -1;
		opacity: 0.15;
	}
</style>